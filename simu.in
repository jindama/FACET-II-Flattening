###########################
# Load in Distribution    #
###########################
#Use this to load in external distributions rather than creating them in GPT
if(loadin == 1) m = me ;
if(loadin == 1) q = qe;
if(loadin == 1) setfile("beam","C:\Users\ocamacho\FACET_Model\emit_test.gdf");
if(loadin == 1) pp("External istribution loaded");
if(loadin == 1) setreduce("beam", nps);
if(loadin == 1) pp("External distribution randomly sampled to reduce to ", nps, " macroparticles.");




##############################
# Load in bitmap    ##########
##############################
#Try loading in first
if(loadin == 2) setfile("beam","C:\Users\ocamacho\FACET_Model\bunchData.gdf");
if(loadin == 2) pp("Distribution loaded");
if(loadin == 2) setreduce("beam", nps);
if(loadin == 2) pp("Distribution randomly sampled to reduce to ", nps, " macroparticles.");

#Now fix the transverse distribution
res = 215053.763; #Microns per pixel (776/beamDiam);
if(loadin == 2) setxydistbmp("beam","C:\Users\ocamacho\FACET_Model\newCathodeSpot_1.BMP", res, res);
#if(loadin == 2) rmax("wcs", "I", 0.00225, 1e-7);
if(loadin == 2) pp("Transverse distribution fixed by newCathodeSpot.BMP");
if(loadin == 2) settransform("wcs", -0.20*dx, -0.450*dy, 0, 1, 0, 0, 0, 1, 0, "beam");
G = 1 + 8.1e-7; #Corresponds to 4.14eV
GBz = sqrt(G^2 - 1);
tlenRMS = tlenFWHM/2.35482005;
#if(loadin == 2) settdist("beam", "g", 0, tlenRMS, 2.5, 2.5);
#if (loadin == 2) setGdist("beam", "g", G, G - 1, 0, 1);

#######################
# Energy distribution #
#######################
#Elaser = 4.73;	#4.66# laser energy in eV
#Wfunc = 4.66;	# Work function in eV
#Efmax=240;
#dW = sqrt(abs(qe)^3*Efmax*abs(sin(phiL/deg))/(4*pi*eps0))/abs(qe); #in eV
#Eo=Elaser-Wfunc+dW;	# Energy including Schottky Effect
#G=1+|qe|*Eo/(me*c^2);	# Corresponding Gamma
#GB=sqrt(G^2-1);	# Corresponding Gamma*Beta
#avg_GBz = 0.006750824506; # 
std_GBz = 9.721327351e-6; # Standard deviation in GBz
#setGBzdist("beam","g",avg_GBz, std_GBz,1,1);

#if(loadin == 2) setphidist("beam","u",0,2*pi);
#if(loadin == 2) setGBzdist("beam","g",0, GBz,3, 3); #For now, beam is generated at rest with zero initial energy spread
#if(loadin == 2) setGBthetadist("beam","u",pi/4,pi/2); #Uniform phase space distribution for now
#if(loadin == 2) setGBphidist("beam","u",0,2*pi);

if(loadin == 2) setGBxemittance("beam",themit);
if(loadin == 2) setGByemittance("beam",themit);




##############################
# Transverse phase space     #
##############################
if(loadin == 0) pp("Generating particle distribution");
if(loadin == 0) setparticles("beam",nps,me,qe,-Qtot*1e-9);
if(loadin == 0) setrxydist("beam","u",beamDiam/2, beamDiam/2); #Uniform for now
if(loadin == 0) setrxydist("beam","g",0, beamDiam/2,0, 1); #1sig cut Gaussian 


###############################
# Longitudinal phase space    #
###############################
G = 1.0000000001;
GBz = sqrt(G^2 - 1);
if(loadin == 0) setphidist("beam","u",0,2*pi);
if(loadin == 0) setGBzdist("beam","u",GBz,1.0e-20); #For now, beam is generated at rest with zero initial energy spread
if(loadin == 0) setGBthetadist("beam","u",pi/4,pi/2); #Uniform phase space distribution for now
if(loadin == 0) setGBphidist("beam","u",0,2*pi);

################
# Emittance    #
################ 
#if(loadin == 0) setGBxemittance("beam",themit);
#if(loadin == 0) setGByemittance("beam",themit);

#######################
# Longitudinal Dist   #
#######################
beamLen = c*tlenRMS;
if(loadin == 0) setzdist("beam", "u", beamLen/2, beamLen);

#################################
# Beam Release in Finite Time   #
#################################
t0=2.45e-11;
if(loadin == 0) settdist("beam","u",0,t0); #Flat profile




##################
# Spacecharge    #
##################
setrmacrodist("beam", "u", 2.817940e-13, 0); #Arbitrarily set to classical electron radius

if(spacec==1) Spacecharge3Dmesh("Cathode", "SolverAcc", meshacc); #Include image charges behind the cathode
if(spacec==2) setcharge2Dcircle("beam",-Qtot*1e-9) ;
if(spacec==2) Spacecharge2Dcircle(); #Never used this but included for completeness
if(spacec==3) setrmacrodist("beam","u", 2.82e-15,0);# Classical electron radius
if(spacec==3) Spacecharge3Dtree(theta); #Barnes-Hut grouping algorithm for spacecharge
if(spacec==3) Spacecharge3Dmesh("Cathode"); #Cute trick to deal with image charges at the cathode
if(spacec==3) Spacecharge3Dmesh("FieldFactor",-1);




#############
# RF GUN    #
#############
freqS = 2.856e9; #S band frequency in Hz
wS=2*pi*freqS; #S-band angular frequency in rad/sec
kS=wS/299792458; #S-band wave number in meter^-1
scale = 1.0*48.74e6 ;#51594212.5*0.9738*0.97;#Scaling of RF field 47537665.05908992;#/2.45 for initial tests. 
map1D_TM("wcs", "z", -1.5e-4, "C:\Users\ocamacho\FACET_Model\smoothGun.gdf", "z", "Ez", scale, (gunPhase)/deg, wS); #Using given 1D map for now




############################
# Bucking Solenoid         #
############################
map1D_B("wcs","z",magSolStart,"C:\Users\ocamacho\FACET_Model\smooth_sol_new.gdf","z","Bz",magSolFac);#Using given 1D map for now




############################
# Compensation Solenoid    #
############################
solStart = solStart;
solFac = solFac*magSolFac;
map1D_B("wcs","z",solStart,"C:\Users\ocamacho\FACET_Model\smooth_sol_new.gdf","z","Bz",solFac);#Using given 1D map for now




############################
# Initial Corrector Quad   #
############################

#####################
#Quad 1: SQ10122    #
#####################
#Skew quad!
#quadrupole("wcs", 0, 0, quadzStart1, 1, -1, 0, 1, 1, 0, quadLength1, quadGrad1, pi/quadBore1); #Fringe field coefficient to be taken as pi/r_bore, as suggested by GPT manual

#####################
#Quad 2: CQ10122    #
#####################
#Normal quad
#quadrupole("wcs", "z", quadzStart2, quadLength2, quadGrad2, pi/quadBore2);




########################
# TW Booster Linac 1   #
########################
############################
#IMPACT-t Style TWLinac    #
############################
phi11 = theta01; #+ kS*d - pi/2;
d = 0.104926; #Accelerating structure spatial period
loaf1Scale = (0.978)*(1.003)*loaffac*loaf1Scale;
cell1Scale = 2*(0.978)*(1.003)*loaffac*loaf1Scale;


#trwlinac("wcs","z",2.49105,0.15,50e6,4e+07,5.76239124e-01*4e+07,12,theta01,2.32129,1.79447772373049e10,3.0429) ;



#trwlinac("wcs","z",2.49105,0.1,50e6,4e+07, 5*3.49170325e-02*4e+07,12,theta01,2.32129,(2)*1.79447772373049e10,3.0429) ;



#trwlinac("wcs","z",2.49105,0.1,50e6,4e+07,7.19361681e-18*4e+07,12,theta01,2.32129,(2/3)*1.79447772373049e10,3.0429) ;



#trwlinac("wcs","z",2.49105,0.1,50e6,4e+07,2.26321047e-01*4e+07,12,theta01 + pi,2.32129,(2/4)*1.79447772373049e10,3.0429) ;



#trwlinac("wcs","z",2.49105,0.1,50e6,4e+07,3.23179511e-17*4e+07,12,theta01,2.32129,(2/5)*1.79447772373049e10,3.0429) ;



#trwlinac("wcs","z",2.49105,0.1,50e6,4e+07,6.93284770e-02*4e+07,12,theta01 + pi,2.32129,(2/6)*1.79447772373049e10,3.0429) ;


#Initial cell
map1D_TM("wcs", "z",body1Start - d/2,  "C:\Users\ocamacho\FACET_Model\loaf_model_new_1cell_1d.gdf", "z", "Ez", cell1Scale, theta01, wS);

#Forward Traveling Wave
#TURNED ON FOR NOW
map1D_TM("wcs", "z", body1Start, "C:\Users\ocamacho\FACET_Model\loaf_model_new_56cell_1d.gdf", "z", "Ez", loaf1Scale, (theta01 + pi/6)/deg, wS);
map1D_TM("wcs", "z", body1Start, "C:\Users\ocamacho\FACET_Model\loaf_model_new_56cell_1d.gdf", "z", "Ez", loaf1Scale, (theta01 + pi/2)/deg, wS);

#End Cell
map1D_TM("wcs", "z", body1Start + bodyLen, "C:\Users\ocamacho\FACET_Model\loaf_model_new_1cell_1d.gdf", "z", "Ez", cell1Scale, theta01 , wS);




########################
# Post Linac Quads
##########################

###################
# Quad QA10361    #
###################

#quadrupole("wcs", "z", quadzStart3, quadLength3, quadGrad3, pi/quadBore3);

###################
# Quad QA10371    #
###################
#quadrupole("wcs", "z", quadzStart4, quadLength4, quadGrad4, pi/quadBore4);




######################
# Booster Linac 2    #   
######################
#Same length as Linac 1
#Should boost up to 135MeV, fixed!

############################
#IMPACT-t Style TWLinac    #
############################
phi12 = theta02; #+ kS*d - pi/2;
lobffac = lobffac;
lobfScale = (131.6/146)*(135/145)*(1.0484198)*lobfScale;
d = 0.104926; #Accelerating structure spatial period
phi22 = theta02 + 1*pi/6; #3pi/2 phase shift
phi32 = phi22 + 1*pi/3; #-3pi/2 phase shift 
cell2Scale = (131.6/146)*(135/145)*(1.0484198)*cell2Scale;
#Initial cell
map1D_TM("wcs", "z", body2Start - d/2, "C:\Users\ocamacho\FACET_Model\loaf_model_new_1cell_1d.gdf", "z", "Ez", cell2Scale, theta02, wS);

#Forward Traveling Wave
#TURNED ON FOR NOW
map1D_TM("wcs", "z", body2Start, "C:\Users\ocamacho\FACET_Model\loaf_model_new_56cell_1d.gdf", "z", "Ez", lobfScale, (theta02 + pi/6)/deg, wS);
#Backwards Traveling Wave
map1D_TM("wcs", "z", body2Start, "C:\Users\ocamacho\FACET_Model\loaf_model_new_56cell_1d.gdf", "z", "Ez", lobfScale, (theta02 + pi/2)/deg, wS);

#End Cell
map1D_TM("wcs", "z", body2Start + bodyLen, "C:\Users\ocamacho\FACET_Model\loaf_model_new_1cell_1d.gdf", "z", "Ez", cell2Scale, theta02, wS);




##############################
# More normal quads below    #
##############################

###################
# Quad QE10425   #
###################
#quadrupole("wcs", "z", quadzStart5, quadLength5, quadGrad5, pi/quadBore5);



###################
# Quad QE10441   #
###################
#quadrupole("wcs", "z", quadzStart6, quadLength6, quadGrad6, pi/quadBore6);




###################
# Quad QE10511    #
###################
#quadrupole("wcs", "z", quadzStart7, quadLength7, quadGrad7, pi/quadBore7);




###################
# Quad QE10525    #
###################
#quadrupole("wcs", "z", quadzStart8, quadLength8, quadGrad8, pi/quadBore8);




#######################
### RFTB TRANSFORM    #
#######################

avgG = 267.4375 ;
quadL = 0.108 ;



#0.81558459, -1.57210329, -2.6536573 

q1 = fac1*(0.81558459); #-0.9973204067549711
d1 = 1.0 ;
q2 = fac2*(-1.57210329); #1.2423380642033448
d2 = 1.0 ;
q3 = fac3*(-2.6536573) ; #-2.467383055653071

Bp1 = avgG*0.511*q1*(1e6)/(c*quadL);
Bp2 = avgG*0.511*q2*(1e6)/(c*quadL);
Bp3 = avgG*0.511*q3*(1e6)/(c*quadL);

#quadrupole("wcs", 0, 0, quadzStartFL1 + quadL/2.0, 1, -1, 0, 1, 1, 0, quadL, Bp1, pi/quadBore8);

#quadrupole("wcs", 0, 0,(quadzStartFL1 + quadL/2) + (quadL/2 + d1 + quadL/2), 1, -1, 0, 1, 1, 0, quadL, Bp2, pi/quadBore8);

#quadrupole("wcs", 0, 0, (quadzStartFL1 + quadL/2) + (quadL/2 + d1 + quadL/2) + (quadL/2 + d2 + quadL/2), 1, -1, 0, 1, 1, 0, quadL, Bp3, pi/quadBore8);
 








 







#########################
# Time Domain Output    #                 
#########################
accuracy(acc);
if(nscreens>1) dz_step = (zend-zstart)/nscreens;
if(nscreens>1)   tout(zstart/c,zend/c,dz_step/c);
#(Physical viewing screens may be included in tout by force)
#Need to use tout and not snapshot for avgfEz, avgfBz, etc. to work
#if(nscreens>1)   tout(zScreen1/c);
#if(nscreens>1)   tout(zScreen2/c);
#if(nscreens>1)   tout(zScreen3/c);
if(nscreens == 1) tout(zend/c);
#Agreed upon checkpoints
#tout(0.1335/c);
#tout(4.305/c);
#tout(9.002/c);

#################################
# Detection screen snapshots    #
#################################
#if(nscreens ==0) snapshot(zScreen1/c);
#if(nscreens ==0) snapshot(zScreen2/c);
#if(nscreens ==0) snapshot(zScreen3/c);

##########################
# Optimization Screen    #
##########################
if(optMode == 1) screen( "wcs","I", 0.13 ) ;



#writefloorplan("C:\Users\ocamacho\FACET_Model\FACET2_floorplan.gdf");










